name: Generate Thumbnails

on:
  push:
    paths:
      - 'assets/**'
  workflow_dispatch:
  workflow_call:

jobs:
  generate:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install ImageMagick with WebP support
        run: |
          sudo apt-get update
          sudo apt-get install -y imagemagick libwebp-dev

      - name: Install FFmpeg for video processing
        run: |
          sudo apt-get install -y ffmpeg

      - name: Verify ImageMagick and FFmpeg installations
        run: |
          convert -version
          echo "ImageMagick convert command is available"
          convert -list format | grep -i webp || echo "WebP not found in ImageMagick delegates"
          ffmpeg -version
          ffprobe -version
          echo "All media processing tools are ready"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile=false

      - name: Generate thumbnails
        run: |
          chmod +x scripts/generate-thumbnails.ts
          npx tsx scripts/generate-thumbnails.ts

      - name: Commit thumbnails if changed
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add assets-thumbs/
          if git diff --staged --quiet; then
            echo "No thumbnail changes to commit"
          else
            git stash --include-untracked
            git pull --rebase
            git stash pop || true
            git add assets-thumbs/
            git commit -m "feat(thumbs): generate thumbnails for images [skip ci]" || echo "Nothing to commit"
            git push
            echo "Thumbnails committed and pushed"
          fi

      - name: Trigger manifest rebuild
        if: steps.commit.conclusion == 'success'
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: rebuild_manifest